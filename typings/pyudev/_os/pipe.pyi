"""
This type stub file was generated by pyright.
"""

"""
    pyudev._os.pipe
    ===============

    Fallback implementations for pipe.

    1. pipe2 from python os module
    2. pipe2 from libc
    3. pipe from python os module

    The Pipe class wraps the chosen implementation.

    .. moduleauthor:: Sebastian Wiesner  <lunaryorn@gmail.com>
"""
O_CLOEXEC = ...
_PIPE2 = ...
def set_fd_flag(fd, flag): # -> None:
    """Set a flag on a file descriptor.

    ``fd`` is the file descriptor or file object, ``flag`` the flag as integer.

    """
    ...

def set_fd_status_flag(fd, flag): # -> None:
    """Set a status flag on a file descriptor.

    ``fd`` is the file descriptor or file object, ``flag`` the flag as integer.

    """
    ...

class Pipe:
    """A unix pipe.

    A pipe object provides two file objects: :attr:`source` is a readable file
    object, and :attr:`sink` a writeable.  Bytes written to :attr:`sink` appear
    at :attr:`source`.

    Open a pipe with :meth:`open()`.

    """
    @classmethod
    def open(cls): # -> Self:
        """Open and return a new :class:`Pipe`.

        The pipe uses non-blocking IO."""
        ...
    
    def __init__(self, source_fd, sink_fd) -> None:
        """Create a new pipe object from the given file descriptors.

        ``source_fd`` is a file descriptor for the readable side of the pipe,
        ``sink_fd`` is a file descriptor for the writeable side."""
        ...
    
    def close(self): # -> None:
        """Closes both sides of the pipe."""
        ...
    


