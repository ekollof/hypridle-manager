"""
This type stub file was generated by pyright.
"""

from wx import EvtHandler

"""pyudev.wx
    =========

    Wx integration.

    :class:`MonitorObserver` integrates device monitoring into the wxPython\\_
    mainloop by turing device events into wx events.

    :mod:`wx` from wxPython\\_ must be available when importing this module.

    .. _wxPython: http://wxpython.org/

    .. moduleauthor::  Tobias Eberle  <tobias.eberle@gmx.de>
    .. versionadded:: 0.14

"""
class MonitorObserver(EvtHandler):
    """
    An observer for device events integrating into the :mod:`wx` mainloop.

    This class inherits :class:`~wx.EvtHandler` to turn device events into
    wx events:

    >>> from pyudev import Context, Monitor
    >>> from pyudev.wx import MonitorObserver
    >>> context = Context()
    >>> monitor = Monitor.from_netlink(context)
    >>> monitor.filter_by(subsystem='input')
    >>> observer = MonitorObserver(monitor)
    >>> def device_event(event):
    ...     print('action {0} on device {1}'.format(event.device.action, event.device))
    >>> observer.Bind(EVT_DEVICE_EVENT, device_event)
    >>> monitor.start()

    This class is a child of :class:`wx.EvtHandler`.

    .. versionadded:: 0.17
    """
    def __init__(self, monitor) -> None:
        ...
    
    @property
    def enabled(self): # -> bool:
        """
        Whether this observer is enabled or not.

        If ``True`` (the default), this observer is enabled, and emits events.
        Otherwise it is disabled and does not emit any events.
        """
        ...
    
    @enabled.setter
    def enabled(self, value): # -> None:
        ...
    
    def start(self): # -> None:
        """
        Enable this observer.

        Do nothing, if the observer is already enabled.
        """
        ...
    
    def stop(self): # -> None:
        """
        Disable this observer.

        Do nothing, if the observer is already disabled.
        """
        ...
    


class WxUDevMonitorObserver(MonitorObserver):
    """An observer for device events integrating into the :mod:`wx` mainloop.

    .. deprecated:: 0.17
       Will be removed in 1.0.  Use :class:`MonitorObserver` instead.
    """
    _action_event_map = ...
    def __init__(self, monitor) -> None:
        ...
    


